#include "threed_render_hls.hpp"
#include <fstream>

int main()
{
    static float mesh_transmission[triangle_number_max * 3 * 3] = {0, 0, 0, 0, 1, 0, 1, 1, 0,
                                                                   0, 0, 0, 1, 1, 0, 1, 0, 0,
                                                                   1, 0, 0, 1, 1, 0, 1, 1, 1,
                                                                   1, 0, 0, 1, 1, 1, 1, 0, 1,
                                                                   1, 0, 1, 1, 1, 1, 0, 1, 1,
                                                                   1, 0, 1, 0, 1, 1, 0, 0, 1,
                                                                   0, 0, 1, 0, 1, 1, 0, 1, 0,
                                                                   0, 0, 1, 0, 1, 0, 0, 0, 0,
                                                                   0, 1, 0, 0, 1, 1, 1, 1, 1,
                                                                   0, 1, 0, 1, 1, 1, 1, 1, 0,
                                                                   1, 0, 1, 0, 0, 1, 0, 0, 0,
                                                                   1, 0, 1, 0, 0, 0, 1, 0, 0};
    static float screen_transmission[screen_height_max * screen_width_max];
    static float point[triangle_number_max][3] = {{1.000000, -1.000000, -1.000000},
                                                  {1.000000, 1.000000, -1.000000},
                                                  {1.000000, -1.000000, 1.000000},
                                                  {1.000000, 1.000000, 1.000000},
                                                  {-1.000000, -1.00000, -1.000000},
                                                  {-1.000000, 1.000000, -1.000000},
                                                  {-1.000000, -1.00000, 1.000000},
                                                  {-1.000000, 1.000000, 1.000000},
                                                  {-0.720000, 0.120000, -1.400000},
                                                  {0.300000, 0.000000, 5.000000},
                                                  {-0.600000, -0.60000, -1.400000},
                                                  {-0.300000, 0.000000, 5.000000},
                                                  {-1.200000, 0.200000, 1.000000},
                                                  {-0.600000, 0.600000, -1.400000},
                                                  {-1.200000, -0.20000, -1.000000},
                                                  {-1.200000, 0.200000, -1.000000},
                                                  {1.200000, -0.200000, 1.000000},
                                                  {1.200000, -0.200000, -1.000000},
                                                  {1.200000, 0.200000, -1.000000},
                                                  {1.200000, 0.200000, 1.000000},
                                                  {-1.200000, -0.20000, 1.000000},
                                                  {0.600000, 0.600000, -1.400000},
                                                  {0.600000, -0.600000, -1.400000},
                                                  {-4.200000, 0.060000, 1.000000},
                                                  {-4.200000, -0.06000, 1.000000},
                                                  {-4.200000, -0.06000, -1.000000},
                                                  {-4.200000, 0.060000, -1.000000},
                                                  {4.200000, -0.060000, 1.000000},
                                                  {4.200000, -0.060000, -1.000000},
                                                  {4.200000, 0.060000, -1.000000},
                                                  {4.200000, 0.060000, 1.000000},
                                                  {4.200000, -0.180000, 1.000000},
                                                  {4.200000, -0.180000, -1.000000},
                                                  {4.200000, 0.180000, -1.000000},
                                                  {4.200000, 0.180000, 1.000000},
                                                  {4.500000, -0.180000, 1.000000},
                                                  {4.500000, -0.180000, -1.000000},
                                                  {4.500000, 0.180000, -1.000000},
                                                  {4.500000, 0.180000, 1.000000},
                                                  {-4.200000, 0.180000, 1.000000},
                                                  {-4.200000, -0.18000, 1.000000},
                                                  {-4.200000, -0.18000, -1.000000},
                                                  {-4.200000, 0.180000, -1.000000},
                                                  {-4.500000, 0.180000, 1.000000},
                                                  {-4.500000, -0.18000, 1.000000},
                                                  {-4.500000, -0.18000, -1.000000},
                                                  {-4.500000, 0.180000, -1.000000},
                                                  {4.350000, -0.180000, 3.000000},
                                                  {4.350000, 0.180000, 3.000000},
                                                  {-4.350000, 0.180000, 3.000000},
                                                  {-4.350000, -0.18000, 3.000000},
                                                  {0.000000, -0.700000, 3.000000},
                                                  {-0.720000, -0.12000, -1.400000},
                                                  {0.720000, -0.120000, -1.400000},
                                                  {0.720000, 0.120000, -1.400000}};
    static int face[triangle_number_max][3] = {{21, 52, 12},
                                               {6, 13, 8},
                                               {5, 23, 1},
                                               {7, 1, 3},
                                               {4, 6, 8},
                                               {4, 12, 10},
                                               {17, 20, 10},
                                               {20, 4, 10},
                                               {17, 52, 3},
                                               {7, 3, 52},
                                               {16, 14, 9},
                                               {7, 15, 5},
                                               {20, 30, 19},
                                               {18, 23, 54},
                                               {4, 19, 2},
                                               {1, 17, 3},
                                               {13, 25, 21},
                                               {13, 21, 12},
                                               {12, 52, 10},
                                               {8, 13, 12},
                                               {27, 42, 43},
                                               {15, 27, 16},
                                               {21, 26, 15},
                                               {16, 24, 13},
                                               {31, 34, 30},
                                               {18, 28, 17},
                                               {17, 31, 20},
                                               {19, 29, 18},
                                               {32, 49, 35},
                                               {29, 32, 28},
                                               {31, 32, 35},
                                               {29, 34, 33},
                                               {38, 36, 37},
                                               {34, 37, 33},
                                               {35, 38, 34},
                                               {33, 36, 32},
                                               {43, 44, 40},
                                               {25, 42, 26},
                                               {27, 40, 24},
                                               {25, 40, 41},
                                               {44, 46, 45},
                                               {40, 44, 50},
                                               {42, 47, 43},
                                               {41, 46, 42},
                                               {44, 47, 46},
                                               {32, 36, 48},
                                               {39, 35, 49},
                                               {39, 48, 36},
                                               {45, 51, 50},
                                               {40, 51, 41},
                                               {45, 41, 51},
                                               {45, 50, 44},
                                               {18, 29, 28},
                                               {17, 28, 31},
                                               {4, 2, 6},
                                               {18, 55, 19},
                                               {15, 11, 5},
                                               {19, 22, 2},
                                               {2, 14, 6},
                                               {16, 53, 15},
                                               {53, 9, 54},
                                               {19, 30, 29},
                                               {15, 26, 27},
                                               {16, 27, 24},
                                               {13, 24, 25},
                                               {21, 25, 26},
                                               {7, 21, 15},
                                               {7, 5, 1},
                                               {21, 7, 52},
                                               {1, 18, 17},
                                               {17, 10, 52},
                                               {4, 20, 19},
                                               {20, 31, 30},
                                               {4, 8, 12},
                                               {43, 47, 44},
                                               {6, 16, 13},
                                               {40, 50, 51},
                                               {41, 45, 46},
                                               {42, 46, 47},
                                               {2, 22, 14},
                                               {19, 55, 22},
                                               {18, 54, 55},
                                               {18, 1, 23},
                                               {5, 11, 23},
                                               {15, 53, 11},
                                               {16, 9, 53},
                                               {16, 6, 14},
                                               {9, 14, 22},
                                               {22, 55, 9},
                                               {55, 54, 9},
                                               {54, 23, 11},
                                               {11, 53, 54},
                                               {34, 38, 37},
                                               {38, 39, 36},
                                               {39, 49, 48},
                                               {35, 39, 38},
                                               {33, 37, 36},
                                               {25, 41, 42},
                                               {27, 43, 40},
                                               {31, 35, 34},
                                               {29, 33, 32},
                                               {32, 48, 49},
                                               {27, 26, 42},
                                               {31, 28, 32},
                                               {29, 30, 34},
                                               {25, 24, 40}};
    // unsigned char triangle_number = 12;
    unsigned char triangle_number = 106;
    unsigned char screen_height = 100;
    unsigned char screen_width = 100;
    for (unsigned char i = 0; i < triangle_number; ++i)
        for (unsigned char j = 0; j < 3; ++j)
            for (unsigned char k = 0; k < 3; ++k)
                mesh_transmission[i * 9 + j * 3 + k] = point[face[i][j] - 1][k];

    for (float i = 50; i < 360; i += 500)
        for (float j = 50; j < 360; j += 500)
            for (float k = 50; k < 360; k += 500)
            // for (float i = 50; i < 360; i += 50)
            //     for (float j = 50; j < 360; j += 50)
            //         for (float k = 50; k < 360; k += 50)
            {
                // threed_render_hls(mesh_transmission, triangle_number, screen_transmission, screen_height, screen_width, i, j, k, 3);
                threed_render_hls(mesh_transmission, triangle_number, screen_transmission, screen_height, screen_width, i, j, k, 7);

                std::fstream file;
                file.open("e:/fpga/fpgacamp2023/threed_render/src/draw_result.py", std::ios::out);
                file << "screen=[";
                for (unsigned char j = 0; j < screen_height; ++j)
                {
                    file << "[";
                    for (unsigned char k = 0; k < screen_width - 1; ++k)
                    {
                        file << screen_transmission[j * screen_width + k] << ",";
                    }
                    if (j != screen_height - 1)
                        file << screen_transmission[j * screen_width + screen_width - 1] << "],\n";
                    else
                        file << screen_transmission[j * screen_width + screen_width - 1] << "]]\n";
                }
                file << "import matplotlib.pyplot as plt\nplt.imshow(screen,cmap='gray')\nplt.colorbar()\nplt.show()\n";
                file.close();
                std::system("python e:/fpga/fpgacamp2023/threed_render/src/draw_result.py");
            }
    return 0;
}
